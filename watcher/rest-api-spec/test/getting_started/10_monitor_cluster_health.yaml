---
"Getting started - Monitor cluster health":
  - do:
      cluster.health:
          wait_for_status: green


  - do: {watcher.stats:{}}
  - match: { "watcher_state": "started" }
  - match: { "watch_count": 0 }

  - do:
      watcher.put_watch:
        id: "cluster_health_watch"
        body:  > 
          {
            "trigger": {
              "schedule": {
                "interval": "1s"
              }
            },
            "input": {
              "http": {
                "request": {
                  "host": "localhost",
                  "port": ${integ.http.port},
                  "path": "/_cluster/health",
                  "auth" : {
                    "basic" : {
                      "username" : "test_admin",
                      "password" : "changeme"
                    }
                  }
                }
              }
            },
            "condition": {
              "compare": {
                "ctx.payload.number_of_data_nodes": {
                  "lt": "10"
                }
              }
            },
            "actions": {
              "log": {
                "logging": {
                  "text": "executed at {{ctx.execution_time}}"
                }
              }
            }
          }
  - match: { _id: "cluster_health_watch" }
  - match: { created: true }

  - do: {watcher.stats:{}}
  - match: { "watch_count": 1 }

  # Simulate a Thread.sleep()
  - do:
      catch: request_timeout
      cluster.health:
        wait_for_nodes: 99
        timeout: 10s
  - match: { "timed_out": true }

  - do:
      indices.refresh:
        index: .watch_history-*

  - do:
      search:
        index: .watch_history-*
        body: >
          {
            "query": {
              "bool": {
                "must" : [
                  {
                    "term": {
                      "watch_id": {
                        "value": "cluster_health_watch"
                      }
                    }
                  },
                  {
                    "term": {
                       "result.condition.met": {
                         "value": "true"
                       }
                    }
                  }
                ]
              }
            }
          }
  - gte:  { hits.total: 1 }

  - do:
      watcher.delete_watch:
        id: "cluster_health_watch"
  - match: { found: true }


  - do: {watcher.stats:{}}
  - match: { "watch_count": 0 }
