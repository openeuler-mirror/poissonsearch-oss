import org.elasticsearch.gradle.MavenFilteringHack

apply plugin: 'elasticsearch.esplugin'
esplugin {
  name 'watcher'
  description 'Elasticsearch Watcher'
  classname 'org.elasticsearch.watcher.WatcherPlugin'
  isolated false
}

configurations {
  licensePluginZip
}

ext.versions = [
  okhttp: '2.3.0'
]

dependencies {
  licensePluginZip project(path: "${projectsPrefix}:license:plugin") // zip
  provided project(path: "${projectsPrefix}:license:plugin", configuration: 'runtime')
  provided project(path: "${projectsPrefix}:shield", configuration: 'runtime')

  compile 'com.googlecode.owasp-java-html-sanitizer:owasp-java-html-sanitizer:r239'
  compile 'com.google.guava:guava:19.0-rc2'
  compile 'com.google.code.findbugs:jsr305:3.0.1'
  compile 'com.sun.mail:javax.mail:1.5.3'
  compile 'javax.activation:activation:1.1.1'

  testCompile 'org.subethamail:subethasmtp:3.1.7'

  // mock web server
  testCompile "com.squareup.okhttp:mockwebserver:${versions.okhttp}"
  testCompile "com.squareup.okhttp:okhttp:${versions.okhttp}"
  testCompile "com.squareup.okhttp:okhttp-ws:${versions.okhttp}"
  testCompile 'com.squareup.okio:okio:1.3.0'
  testCompile 'org.bouncycastle:bcprov-jdk15on:1.50'

  testCompile 'org.slf4j:slf4j-log4j12:1.6.2'
  testCompile 'org.slf4j:slf4j-api:1.6.2'
  testCompile 'org.elasticsearch:securemock:1.1'
}

compileJava.options.compilerArgs << "-Xlint:-deprecation,-rawtypes,-serial,-try,-unchecked"
compileTestJava.options.compilerArgs << "-Xlint:-deprecation,-rawtypes,-serial,-try,-unchecked"

/*ext.expansions = [
  'integ.http.port': integTest.cluster.httpPort
]

processTestResources {
  inputs.properties(expansions)
  with copySpec {
    MavenFilteringHack.filter(it, expansions)
  }
}
*/

integTest {
  dependsOn configurations.licensePluginZip
  cluster {
    plugin 'installLicensePlugin', configurations.licensePluginZip
  }
}

// TODO: standardize packaging config for plugins
bundlePlugin {
  from(projectDir) {
    include 'LICENSE.txt'
    include 'NOTICE.txt'
  }
  from('bin/watcher') {
    into 'bin'
  }
}
