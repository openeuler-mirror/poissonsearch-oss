import org.elasticsearch.gradle.MavenFilteringHack

apply plugin: 'elasticsearch.esplugin'
esplugin {
  description 'Elasticsearch Watcher'
  classname 'org.elasticsearch.watcher.WatcherPlugin'
  isolated false
}

configurations {
  licensePluginZip
}

dependencies {
  licensePluginZip project(path: ':license:plugin') // zip
  provided project(path: ':license:plugin', configuration: 'runtime')
  provided project(path: ':shield', configuration: 'runtime')

  compile 'com.googlecode.owasp-java-html-sanitizer:owasp-java-html-sanitizer:r239'
  compile 'com.sun.mail:javax.mail:1.5.3'
  compile 'javax.activation:activation:1.1.1'
  // this should be "provided"...
  provided 'com.github.spullara.mustache.java:compiler:0.9.1'

  testCompile "org.elasticsearch:test-framework:${version}"
  testCompile('org.subethamail:subethasmtp:3.1.7') {
    exclude group: 'javax.mail', module: 'mail'
  }
  testCompile 'com.squareup.okhttp:mockwebserver:2.3.0'
  testCompile 'org.slf4j:slf4j-log4j12:1.6.2'
  testCompile 'org.elasticsearch:securemock:1.1'
}

compileJava.options.compilerArgs << "-Xlint:-deprecation,-rawtypes,-serial,-try,-unchecked"
compileTestJava.options.compilerArgs << "-Xlint:-deprecation,-rawtypes,-serial,-try,-unchecked"

/*ext.expansions = [
  'integ.http.port': integTest.cluster.httpPort
]

processTestResources {
  inputs.properties(expansions)
  with copySpec {
    MavenFilteringHack.filter(it, expansions)
  }
}
*/

integTest {
  dependsOn configurations.licensePluginZip
  cluster {
    plugin 'installLicensePlugin', configurations.licensePluginZip
  }
}

// TODO: standardize packaging config for plugins
bundlePlugin {
  from(projectDir) {
    include 'LICENSE.txt'
    include 'NOTICE.txt'
  }
  from('bin/watcher') {
    into 'bin'
  }
}
