/*
 * Licensed to Elasticsearch under one or more contributor
 * license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright
 * ownership. Elasticsearch licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

import org.elasticsearch.gradle.precommit.PrecommitTasks;

group = 'org.elasticsearch.client'
apply plugin: 'elasticsearch.build'

dependencies {
  // TODO once we got rid of the client in the test framework we should use a version variable here
  compile "org.apache.httpcomponents:httpclient:4.5.2"
  compile "org.apache.httpcomponents:httpcore:4.4.4"
  //compile "org.apache.httpcomponents:httpcore-nio:4.4.4"
  //compile "org.apache.httpcomponents:httpasyncclient:4.1.1"
  compile "commons-codec:commons-codec:1.9"
  compile "commons-logging:commons-logging:1.2"

  testCompile "com.carrotsearch.randomizedtesting:randomizedtesting-runner:${versions.randomizedrunner}"
  testCompile "junit:junit:${versions.junit}"
  testCompile 'org.hamcrest:hamcrest-all:1.3'
  testCompile "org.apache.lucene:lucene-test-framework:${versions.lucene}"
  testCompile "org.apache.lucene:lucene-core:${versions.lucene}"
  testCompile "org.apache.lucene:lucene-codecs:${versions.lucene}"
  //mock web server
  testCompile "com.squareup.okhttp3:mockwebserver:3.2.0"
  testCompile "com.squareup.okhttp3:okhttp:3.2.0"
  testCompile "com.squareup.okhttp3:okhttp-ws:3.2.0"
  testCompile "com.squareup.okio:okio:1.6.0"
  testCompile "org.bouncycastle:bcprov-jdk15on:1.54"
}

compileJava.options.compilerArgs << '-Xlint:-cast,-rawtypes,-try,-unchecked'
compileTestJava.options.compilerArgs << '-Xlint:-rawtypes'

forbiddenApisMain {
  //client does not depend on core, so only jdk signatures should be checked
  signaturesURLs = [PrecommitTasks.getResource('/forbidden/jdk-signatures.txt')]
}

forbiddenApisTest {
  //client does not depend on core, so only jdk signatures should be checked
  signaturesURLs = [PrecommitTasks.getResource('/forbidden/jdk-signatures.txt')]
}

//TODO add licenses for dependencies and take care of distribution
//dependency license are currently checked in distribution
dependencyLicenses.enabled=false
//JarHell is part of es core, which we don't want to pull in
jarHell.enabled=false
//NamingConventionCheck is part of test-framework, which we don't want to pull in as it depends on es core
namingConventions.enabled=false

thirdPartyAudit.excludes = [
  //commons-logging optional dependencies
  'org.apache.avalon.framework.logger.Logger',
  'org.apache.log.Hierarchy',
  'org.apache.log.Logger',
  'org.apache.log4j.Category',
  'org.apache.log4j.Level',
  'org.apache.log4j.Logger',
  'org.apache.log4j.Priority',
  //commons-logging provided dependencies
  'javax.servlet.ServletContextEvent',
  'javax.servlet.ServletContextListener'
]
