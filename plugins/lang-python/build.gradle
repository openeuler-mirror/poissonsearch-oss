/*
 * Licensed to Elasticsearch under one or more contributor
 * license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright
 * ownership. Elasticsearch licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

esplugin {
  description 'The Python language plugin allows to have python as the language of scripts to execute.'
  classname 'org.elasticsearch.plugin.python.PythonPlugin'
}

dependencies {
  compile 'org.python:jython-standalone:2.7.0'
}

compileJava.options.compilerArgs << "-Xlint:-unchecked"
compileTestJava.options.compilerArgs << "-Xlint:-unchecked"

integTest {
  cluster {
    systemProperty 'es.script.inline', 'on'
    systemProperty 'es.script.indexed', 'on'
  }
}

// classes are missing, e.g. org.tukaani.xz.FilterOptions
thirdPartyAudit.lenient = true
thirdPartyAudit.excludes = [
    // uses internal java api: sun.security.x509 (X509CertInfo, X509CertImpl, X500Name)
    'org.python.netty.handler.ssl.util.OpenJdkSelfSignedCertGenerator',

    // uses internal java api: sun.misc.Cleaner
    'org.python.netty.util.internal.Cleaner0',

    // uses internal java api: sun.misc.Signal
    'jnr.posix.JavaPOSIX',
    'jnr.posix.JavaPOSIX$SunMiscSignalHandler',

    // uses internal java api: sun.misc.Unsafe
    'com.kenai.jffi.MemoryIO$UnsafeImpl',
    'com.kenai.jffi.MemoryIO$UnsafeImpl32',
    'com.kenai.jffi.MemoryIO$UnsafeImpl64',
    'org.python.google.common.cache.Striped64',
    'org.python.google.common.cache.Striped64$1',
    'org.python.google.common.cache.Striped64$Cell',
    'org.python.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator',
    'org.python.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator$1',
    'org.python.netty.util.internal.chmv8.ForkJoinPool$2',
    'org.python.netty.util.internal.PlatformDependent0',
    'org.python.netty.util.internal.UnsafeAtomicIntegerFieldUpdater',
    'org.python.netty.util.internal.UnsafeAtomicLongFieldUpdater',
    'org.python.netty.util.internal.UnsafeAtomicReferenceFieldUpdater',
    'org.python.netty.util.internal.chmv8.ConcurrentHashMapV8',
    'org.python.netty.util.internal.chmv8.ConcurrentHashMapV8$1',
    'org.python.netty.util.internal.chmv8.ConcurrentHashMapV8$TreeBin',
    'org.python.netty.util.internal.chmv8.CountedCompleter',
    'org.python.netty.util.internal.chmv8.CountedCompleter$1',
    'org.python.netty.util.internal.chmv8.ForkJoinPool',
    'org.python.netty.util.internal.chmv8.ForkJoinPool$WorkQueue',
    'org.python.netty.util.internal.chmv8.ForkJoinTask',
    'org.python.netty.util.internal.chmv8.ForkJoinTask$1',
]
