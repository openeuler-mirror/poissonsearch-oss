/*
 * Licensed to Elasticsearch under one or more contributor
 * license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright
 * ownership. Elasticsearch licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

grant {
  // used by the plugin to get the TCCL to properly initialize all of Hadoop components
  permission java.lang.RuntimePermission "getClassLoader";

  // used for DomainCombiner
  permission java.security.SecurityPermission "createAccessControlContext";
  
  // set TCCL used for bootstrapping Hadoop Configuration and JAAS
  permission java.lang.RuntimePermission "setContextClassLoader";

  //
  // Hadoop 1
  //
    
  // UserGroupInformation (UGI)
  permission java.lang.reflect.ReflectPermission "suppressAccessChecks";

  // UGI triggers JAAS
  permission javax.security.auth.AuthPermission "getSubject";
  
  // JAAS libraries are not loaded with the proper context in Hadoop, hence why the permission is needed here
  permission java.lang.RuntimePermission "loadLibrary.jaas_nt";
  
  // which triggers the use of the Kerberos library
  permission java.lang.RuntimePermission "accessClassInPackage.sun.security.krb5";

  // plus LoginContext
  permission javax.security.auth.AuthPermission "modifyPrincipals";
  
  permission javax.security.auth.AuthPermission "modifyPublicCredentials";
  
  permission javax.security.auth.AuthPermission "modifyPrivateCredentials";

  //
  // Hadoop 2
  //
  
  // UGI (Ugi Metrics)
  permission java.lang.RuntimePermission "accessDeclaredMembers";

  // Shell initialization - reading system props
  permission java.util.PropertyPermission "*", "read,write";
  
  permission javax.security.auth.PrivateCredentialPermission "org.apache.hadoop.security.Credentials   \"*\"", "read";
  
  // HftpFileSystem (all present FS are loaded and initialized at startup ...)
  permission java.lang.RuntimePermission "setFactory";
};