/*
 * Licensed to Elasticsearch under one or more contributor
 * license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright
 * ownership. Elasticsearch licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

esplugin {
  description 'Plugin that allows to configure pipelines to preprocess documents before indexing'
  classname 'org.elasticsearch.plugin.ingest.IngestPlugin'
}

dependencies {
  compile 'org.jruby.joni:joni:2.1.6'
  // joni dependencies:
  compile 'org.jruby.jcodings:jcodings:1.0.12'

  compile ('com.maxmind.geoip2:geoip2:2.3.1')
  // geoip2 dependencies:
  compile('com.fasterxml.jackson.core:jackson-annotations:2.5.0')
  compile('com.fasterxml.jackson.core:jackson-databind:2.5.3')
  compile('com.maxmind.db:maxmind-db:1.0.0')

  compile "com.github.spullara.mustache.java:compiler:0.9.1"
  compile 'joda-time:joda-time:2.8.2'
  testCompile 'org.elasticsearch:geolite2-databases:20151029'
  testCompile 'org.elasticsearch:securemock:1.2'
}

sourceSets {
  test {
    resources {
      srcDir "src/main/packaging/config"
    }
  }
}

task copyDefaultGeoIp2DatabaseFiles(type: Copy) {
  from { zipTree(configurations.testCompile.files.find { it.name.contains('geolite2-databases')}) }
  into "${project.buildDir}/geoip"
  include "*.mmdb"
}

project.bundlePlugin.dependsOn(copyDefaultGeoIp2DatabaseFiles)

compileJava.options.compilerArgs << "-Xlint:-rawtypes,-unchecked,-serial"
compileTestJava.options.compilerArgs << "-Xlint:-rawtypes,-unchecked"

bundlePlugin {
  from("${project.buildDir}/geoip") {
    into 'config/geoip'
  }
}

//geoip depends on asm and google http client which we don't need
thirdPartyAudit.missingClasses = true
