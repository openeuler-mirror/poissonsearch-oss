---
"Check availability of default processors":
  - do:
      cluster.state: {}

  - set: {master_node: master}

  - do:
      nodes.info: {}

  - match:  { nodes.$master.ingest.processors.0.type: date }
  - match:  { nodes.$master.ingest.processors.1.type: uppercase }
  - match:  { nodes.$master.ingest.processors.2.type: set }
  - match:  { nodes.$master.ingest.processors.3.type: lowercase }
  - match:  { nodes.$master.ingest.processors.4.type: gsub }
  - match:  { nodes.$master.ingest.processors.5.type: convert }
  - match:  { nodes.$master.ingest.processors.6.type: remove }
  - match:  { nodes.$master.ingest.processors.7.type: fail }
  - match:  { nodes.$master.ingest.processors.8.type: foreach }
  - match:  { nodes.$master.ingest.processors.9.type: split }
  - match:  { nodes.$master.ingest.processors.10.type: trim }
  - match:  { nodes.$master.ingest.processors.11.type: rename }
  - match:  { nodes.$master.ingest.processors.12.type: join }
  - match:  { nodes.$master.ingest.processors.13.type: append }

---
"Test basic pipeline crud":
  - do:
      ingest.put_pipeline:
        id: "my_pipeline"
        body:  >
          {
            "description": "_description",
            "processors": [
              {
                "set" : {
                  "field" : "field2",
                  "value": "_value"
                }
              }
            ]
          }
  - match: { acknowledged: true }

  - do:
      ingest.get_pipeline:
        id: "my_pipeline"
  - match: { pipelines.0.id: "my_pipeline" }
  - match: { pipelines.0.config.description: "_description" }

  - do:
      ingest.delete_pipeline:
        id: "my_pipeline"
  - match: { acknowledged: true }

  - do:
      catch: missing
      ingest.get_pipeline:
        id: "my_pipeline"

---
"Test invalid config":
  - do:
      catch: /parse_exception/
      ingest.put_pipeline:
        id: "my_pipeline"
        body:  >
          {
            "description": "_description",
            "processors": [
              {
                "set" : {
                }
              }
            ]
          }

---
"Test invalid processor config":
  - do:
      catch: request
      ingest.put_pipeline:
        id: "my_pipeline"
        body:  >
          {
            "description": "_description",
            "processors": [
              {
                "set" : {
                  "tag" : "fritag"
                }
              }
            ]
          }
  - match: { error.root_cause.0.type: "parse_exception" }
  - match: { error.root_cause.0.reason: "[field] required property is missing" }
  - match: { error.root_cause.0.header.processor_tag: "fritag" }
  - match: { error.root_cause.0.header.processor_type: "set" }
  - match: { error.root_cause.0.header.property_name: "field" }

---
"Test basic pipeline with on_failure in processor":
  - do:
      ingest.put_pipeline:
        id: "my_pipeline"
        body:  >
          {
            "description": "_description",
            "processors": [
              {
                "set" : {
                  "field" : "field2",
                  "value": "_value",
                  "on_failure": [
                    {
                      "set" : {
                        "field" : "field2",
                        "value" : "_failed_value"
                      }
                    }
                  ]
                }
              }
            ]
          }
  - match: { acknowledged: true }

  - do:
      ingest.get_pipeline:
        id: "my_pipeline"
  - match: { pipelines.0.id: "my_pipeline" }
  - match: { pipelines.0.config.description: "_description" }

  - do:
      ingest.delete_pipeline:
        id: "my_pipeline"
  - match: { acknowledged: true }

  - do:
      catch: missing
      ingest.get_pipeline:
        id: "my_pipeline"
