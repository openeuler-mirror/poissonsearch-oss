### configuration

## basic

# set to headless, just in case
-Djava.awt.headless=true

# ensure UTF-8 encoding by default (e.g. filenames)
-Dfile.encoding=UTF-8

# use our provided JNA always versus the system one
-Djna.nosys=true

## networking

# force the JVM to use the IPv4 stack
#-Djava.net.preferIPv4Stack=true

### memory

## heap configuration

# minimum size of total heap space
-Xms${heap.min}

# maximum size of total heap space
# it is recommended to set the minimum size and maximum size equal to
# each other to prevent pauses upon resize, and so that memory locking
# will lock the entire heap in physical memory
-Xmx${heap.max}

# size of young generation heap space
#-Xmn${new.size}

# maximum size of NIO direct-buffer allocations
#-XX:MaxDirectMemorySize${max.direct.memory.size}

## CMS configuration
-XX:+UseParNewGC
-XX:+UseConcMarkSweepGC
-XX:CMSInitiatingOccupancyFraction=75
-XX:+UseCMSInitiatingOccupancyOnly

## optimizations

# disable calls to System#gc
-XX:+DisableExplicitGC

# pre-touch memory pages used by the JVM during initialization
-XX:+AlwaysPreTouch

## heap dumps

# generate a heap dump when an allocation from the Java heap fails
# heap dumps are created in the working directory of the JVM
-XX:+HeapDumpOnOutOfMemoryError

# specify an alternative path for heap dumps
# ensure the directory exists and has sufficient space
#-XX:HeapDumpPath=${heap.dump.path}

## GC logging

#-XX:+PrintGCDetails
#-XX:+PrintGCTimeStamps
#-XX:+PrintGCDateStamps
#-XX:+PrintClassHistogram
#-XX:+PrintTenuringDistribution
#-XX:+PrintGCApplicationStoppedTime

# log GC status to a file with time stamps
# ensure the directory exists
#-Xloggc:${loggc}
