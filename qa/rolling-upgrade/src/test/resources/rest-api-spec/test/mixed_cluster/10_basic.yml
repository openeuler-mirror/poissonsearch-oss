---
"Index data and search on the mixed cluster":
 - do:
     cluster.health:
        # if the primary shard of an index with (number_of_replicas > 0) ends up on the new node, the replica cannot be
        # allocated to the old node (see NodeVersionAllocationDecider). x-pack automatically creates indices with
        # replicas, for example monitoring-data-*.
        wait_for_status: yellow
        wait_for_nodes: 2
        timeout: 25s

 - do:
     search:
        index: test_index

 - match: { hits.total: 5 } # no new indexed data, so expect the original 5 documents from the old cluster

 - do:
     bulk:
        refresh: true
        body:
          - '{"index": {"_index": "test_index", "_type": "test_type"}}'
          - '{"f1": "v1_mixed", "f2": 5}'
          - '{"index": {"_index": "test_index", "_type": "test_type"}}'
          - '{"f1": "v2_mixed", "f2": 6}'
          - '{"index": {"_index": "test_index", "_type": "test_type"}}'
          - '{"f1": "v3_mixed", "f2": 7}'
          - '{"index": {"_index": "test_index", "_type": "test_type"}}'
          - '{"f1": "v4_mixed", "f2": 8}'
          - '{"index": {"_index": "test_index", "_type": "test_type"}}'
          - '{"f1": "v5_mixed", "f2": 9}'

 - do:
     index:
       index: test_index
       type: test_type
       id: d10
       body: {"f1": "v6_mixed", "f2": 10}

 - do:
     index:
       index: test_index
       type: test_type
       id: d11
       body: {"f1": "v7_mixed", "f2": 11}

 - do:
     index:
       index: test_index
       type: test_type
       id: d12
       body: {"f1": "v8_mixed", "f2": 12}

 - do:
     indices.flush:
        index: test_index

 - do:
     search:
        index: test_index

 - match: { hits.total: 13 } # 5 docs from old cluster, 8 docs from mixed cluster

 - do:
     delete:
       index: test_index
       type: test_type
       id: d10

 - do:
     delete:
       index: test_index
       type: test_type
       id: d11

 - do:
     delete:
       index: test_index
       type: test_type
       id: d12

 - do:
     indices.flush:
        index: test_index
