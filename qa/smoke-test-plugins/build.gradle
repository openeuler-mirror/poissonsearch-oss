import org.elasticsearch.gradle.MavenFilteringHack

apply plugin: 'elasticsearch.rest-test'

dependencies {
  testCompile project(path: ':x-plugins:shield', configuration: 'runtime')
}

ext.pluginsCount = 4 // we install xplugins explicitly
project.rootProject.subprojects.findAll { it.path.startsWith(':plugins:') }.each { subproj ->
  // need to get a non-decorated project object, so must re-lookup the project by path
  integTest.cluster.plugin(subproj.name, project(subproj.path))
  pluginsCount += 1
}

integTest {
  cluster {
    plugin 'licence', project(':x-plugins:license:plugin')
    plugin 'shield', project(':x-plugins:shield')
    plugin 'watcher', project(':x-plugins:watcher')
    plugin 'marvel-agent', project(':x-plugins:marvel')

    setupCommand 'setupDummyUser',
                 'bin/shield/esusers', 'useradd', 'test_user', '-p', 'changeme', '-r', 'admin'
    waitCondition = { node, ant ->
      File tmpFile = new File(node.cwd, 'wait.success')
      ant.get(src: "http://localhost:${node.httpPort()}",
              dest: tmpFile.toString(),
              username: 'test_user',
              password: 'changeme',
              ignoreerrors: true,
              retries: 10)
      return tmpFile.exists()
    }
  }
} 

ext.expansions = [
  'expected.plugins.count': pluginsCount
]

processTestResources {
  inputs.properties(expansions)
  MavenFilteringHack.filter(it, expansions)
}

