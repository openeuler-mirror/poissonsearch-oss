import com.carrotsearch.gradle.junit4.RandomizedTestingTask
import org.elasticsearch.gradle.BuildPlugin

evaluationDependsOn(xpackModule('core'))

apply plugin: 'elasticsearch.esplugin'
esplugin {
    name 'x-pack-ccr'
    description 'Elasticsearch Expanded Pack Plugin - CCR'
    classname 'org.elasticsearch.xpack.ccr.Ccr'
    hasNativeController false
    requiresKeystore true
    extendedPlugins = ['x-pack-core']
}
archivesBaseName = 'x-pack-ccr'

integTest.enabled = false

compileJava.options.compilerArgs << "-Xlint:-try"
compileTestJava.options.compilerArgs << "-Xlint:-try"

// Instead we create a separate task to run the
// tests based on ESIntegTestCase
task internalClusterTest(type: RandomizedTestingTask,
        group: JavaBasePlugin.VERIFICATION_GROUP,
        description: 'Java fantasy integration tests',
        dependsOn: test.dependsOn) {
    configure(BuildPlugin.commonTestConfig(project))
    classpath = project.test.classpath
    testClassesDirs = project.test.testClassesDirs
    include '**/*IT.class'
    systemProperty 'es.set.netty.runtime.available.processors', 'false'
}

internalClusterTest.mustRunAfter test
check.dependsOn(internalClusterTest, 'qa:multi-cluster:followClusterTest', 'qa:multi-cluster-with-security:followClusterTest')

dependencies {
    compileOnly "org.elasticsearch:elasticsearch:${version}"
    compileOnly "org.elasticsearch.plugin:x-pack-core:${version}"
    testCompile project(path: xpackModule('core'), configuration: 'testArtifacts')
}

dependencyLicenses {
    ignoreSha 'x-pack-core'
}

run {
    plugin xpackModule('core')
}
