import org.elasticsearch.gradle.test.RestIntegTestTask

apply plugin: 'elasticsearch.standalone-test'

dependencies {
    testCompile project(path: xpackModule('enrich'), configuration: 'runtime')
    testCompile project(path: xpackModule('core'), configuration: 'runtime')
    testCompile project(path: xpackModule('enrich:qa:common'), configuration: 'runtime')}

task restTest(type: RestIntegTestTask) {
    mustRunAfter(precommit)
}

restTestCluster {
    distribution 'default'
    setting 'xpack.license.self_generated.type', 'basic'
    setting 'xpack.security.enabled', 'true'
    extraConfigFile 'roles.yml', 'roles.yml'
    setupCommand 'setupTestAdmin',
            'bin/elasticsearch-users', 'useradd', "test_admin", '-p', 'x-pack-test-password', '-r', "superuser"
    setupCommand 'setupEnrichUser',
            'bin/elasticsearch-users', 'useradd', "test_enrich", '-p', 'x-pack-test-password', '-r', "enrich_user,integ_test_role"
    setupCommand 'setupEnrichUserNoPrivs',
            'bin/elasticsearch-users', 'useradd', "test_enrich_no_privs", '-p', 'x-pack-test-password', '-r', "enrich_no_privs"
    waitCondition = { node, ant ->
        File tmpFile = new File(node.cwd, 'wait.success')
        ant.get(src: "http://${node.httpUri()}/_cluster/health?wait_for_nodes=>=${numNodes}&wait_for_status=yellow",
                dest: tmpFile.toString(),
                username: 'test_admin',
                password: 'x-pack-test-password',
                ignoreerrors: true,
                retries: 10)
        return tmpFile.exists()
    }
}

check.dependsOn restTest
test.enabled = false
