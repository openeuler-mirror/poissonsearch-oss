<?xml version="1.0"?>
<project name="elasticsearch-integration-tests">

 <!-- this is all to not run tests for 'pom' packaging. maven you fail -->
  <condition property="shouldskip">
    <istrue value="${skip.integ.tests}"/>
  </condition>

  <!-- runs an OS script -->
  <macrodef name="run-script">
      <attribute name="script"/>
      <attribute name="dir"/>
      <attribute name="args"/>
    <sequential>
      <exec executable="cmd" osfamily="winnt" dir="@{dir}" failonerror="true">
        <arg value="/c"/>
        <arg value="@{dir}/@{script}.bat"/>
        <arg line="@{args}"/>
      </exec>

      <exec executable="sh" osfamily="unix" dir="@{dir}" failonerror="true">
        <arg value="@{dir}/@{script}"/>
        <arg line="@{args}"/>
      </exec>
    </sequential>
  </macrodef>

  <!-- unzip core release artifact and start ES -->
  <target name="start-external-cluster" unless="${shouldskip}">
    <property name="integ.finalname" value="${project.artifactId}-${project.version}"/>
    <property name="integ.scratch" location="${project.build.directory}/integ-tests"/>

    <unzip src="${project.build.directory}/releases/${integ.finalname}.zip"
           dest="${integ.scratch}"/>

    <property name="integ.home" location="${integ.scratch}/${integ.finalname}"/>
    <property name="integ.repo.home" location="${integ.home}/repo"/>
    <property name="integ.args"
              value="-d -Des.node.name=smoke_tester -Des.cluster.name=prepare_release
                     -Des.discovery.zen.ping.multicast.enabled=false -Des.script.inline=on
                     -Des.script.indexed=on -Des.path.repo=${integ.repo.home}"/>

    <!-- execute -->
    <echo>Starting up external cluster...</echo>
    <run-script dir="${integ.home}" script="bin/elasticsearch" args="${integ.args}"/>

    <waitfor maxwait="3" maxwaitunit="minute" checkevery="500">
      <http url="http://127.0.0.1:9200"/>
    </waitfor>

    <echo>External cluster started</echo>
  </target>

  <!-- unzip core release artifact, install plugin, then start ES -->
  <target name="start-external-cluster-with-plugin" unless="${shouldskip}">
    <property name="integ.scratch" location="${project.build.directory}/integ-tests"/>

    <unzip src="${org.elasticsearch:elasticsearch:zip}"
           dest="${integ.scratch}"/>

    <property name="integ.home" location="${integ.scratch}/elasticsearch-${elasticsearch.version}"/>
    <property name="integ.repo.home" location="${integ.home}/repo"/>
    <property name="integ.args"
              value="-d -Des.node.name=smoke_tester -Des.cluster.name=prepare_release
                     -Des.discovery.zen.ping.multicast.enabled=false -Des.script.inline=on
                     -Des.script.indexed=on -Des.path.repo=${integ.repo.home}"/>

    <makeurl property="integ.plugin.url" file="${project.build.directory}/releases/${project.artifactId}-${project.version}.zip"/>

    <echo>Installing plugin ${project.artifactId}...</echo>
    <run-script dir="${integ.home}" script="bin/plugin" args="-u ${integ.plugin.url} -i ${project.artifactId}/${project.version}"/>

    <!-- execute -->
    <echo>Starting up external cluster...</echo>
    <run-script dir="${integ.home}" script="bin/elasticsearch" args="${integ.args}"/>

    <waitfor maxwait="3" maxwaitunit="minute" checkevery="500">
      <http url="http://127.0.0.1:9200"/>
    </waitfor>

    <echo>External cluster started</echo>
  </target>

  <target name="stop-external-cluster">
    <!-- TODO: this is brutal, specify and read our pid file instead -->
    <!-- find ES processes with jps, then shoot them with 50 cal -->
    <exec executable="jps">
      <arg value="-l"/>
      <redirector outputproperty="process.pid">
        <outputfilterchain>
          <linecontains>
            <contains value="org.elasticsearch.bootstrap.Elasticsearch"/>
          </linecontains>
          <replacestring from=" org.elasticsearch.bootstrap.Elasticsearch"/>
        </outputfilterchain>
      </redirector>
    </exec>

    <echo>Shutting down external cluster</echo>

    <exec executable="taskkill" osfamily="winnt">
      <arg value="/F"/>
      <arg value="/PID"/>
      <arg value="${process.pid}"/>
    </exec>
    <exec executable="kill" osfamily="unix">
      <arg value="-9"/>
      <arg value="${process.pid}"/>
    </exec>

    <!-- best effort cleanup. 'clean' will take care in all cases -->
    <delete dir="${project.build.directory}/integ-tests" failonerror="false"/>
  </target>
</project>
