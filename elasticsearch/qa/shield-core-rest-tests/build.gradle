apply plugin: 'elasticsearch.rest-test'

dependencies {
  testCompile project(path: ':x-plugins:elasticsearch:x-pack', configuration: 'runtime')
}

integTest {
  includePackaged true
  systemProperty 'tests.rest.blacklist',
    ['indices.get/10_basic/*allow_no_indices*',
     'cat.count/10_basic/Test cat count output',
     'cat.aliases/10_basic/Empty cluster',
     'indices.segments/10_basic/no segments test',
     'indices.clear_cache/10_basic/clear_cache test',
     'indices.status/10_basic/Indices status test',
     'cat.indices/10_basic/Test cat indices output',
     'cat.recovery/10_basic/Test cat recovery output',
     'cat.shards/10_basic/Test cat shards output',
     'termvector/20_issue7121/*',
     'index/10_with_id/Index with ID',
     'indices.get_alias/20_emtpy/*',
     'cat.segments/10_basic/Test cat segments output',
     'indices.put_settings/10_basic/Test indices settings allow_no_indices',
     'indices.put_settings/10_basic/Test indices settings ignore_unavailable',
     'indices.refresh/10_basic/Indices refresh test no-match wildcard',
     'indices.stats/10_index/Index - star*',
     'indices.recovery/10_basic/Indices recovery test*',
     'indices.shard_stores/10_basic/no indices test',
     'cat.nodeattrs/10_basic/Test cat nodes attrs output',
     'bulk/40_fields/Fields',
     'indices.get_alias/10_basic/Get alias against closed indices'].join(',')

  cluster {
    plugin 'x-pack', project(':x-plugins:elasticsearch:x-pack')
    systemProperty 'es.watcher.enabled', 'false'
    systemProperty 'es.marvel.enabled', 'false'
    setupCommand 'setupDummyUser',
                 'bin/x-pack/esusers', 'useradd', 'test_user', '-p', 'changeme', '-r', 'admin'
    waitCondition = { node, ant ->
      File tmpFile = new File(node.cwd, 'wait.success')
      ant.get(src: "http://${node.httpUri()}",
              dest: tmpFile.toString(),
              username: 'test_user',
              password: 'changeme',
              ignoreerrors: true,
              retries: 10)
      return tmpFile.exists()
    }
  }
}

