---
"Test webhook action with mustache integration":
  - do:
      cluster.health:
          wait_for_status: yellow


  - do: {xpack.watcher.stats:{}}
  - match: { "watcher_state": "started" }
  - match: { "watch_count": 0 }

  - do:
      xpack.watcher.put_watch:
        id: "test_watch"
        body:  >
          {
            "trigger": {
              "schedule": {
                "interval": "1s"
              }
            },
            "input": {
              "simple" : {
                "key" : "value"
              }
            },
            "condition": {
              "always" : {}
            },
            "actions": {
              "output": {
                "webhook" : {
                  "method" : "PUT",
                  "host" : "localhost",
                  "port" : 9400,
                  "path": "/my_index/my_type/{{ctx.watch_id}}",
                  "body" : {
                      "inline": {
                        "watch_id" : "{{ctx.watch_id}}"
                      },
                      "params": {}
                  }
                }
              }
            }
          }
  - match: { _id: "test_watch" }
  - match: { created: true }

  - do: {xpack.watcher.stats:{}}
  - match: { "watch_count": 1 }

  # Simulate a Thread.sleep()
  - do:
      catch: request_timeout
      cluster.health:
        wait_for_nodes: 99
        timeout: 10s
  - match: { "timed_out": true }

  - do:
      get:
        index: my_index
        type:  my_type
        id:    test_watch

  - match: { _source:  { watch_id: "test_watch" } }
