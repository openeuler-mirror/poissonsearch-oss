---
"Test array access":
  - do:
      cluster.health:
          wait_for_status: yellow


  - do: {watcher.stats:{}}
  - match: { "watcher_state": "started" }
  - match: { "watch_count": 0 }

  - do:
      watcher.put_watch:
        id: "test_watch"
        body:  >
          {
            "trigger": {
              "schedule": {
                "interval": "1s"
              }
            },
            "input": {
              "simple" : {
                "objects" : [
                  {
                    "field": "value1"
                  },
                  {
                    "field": "value2"
                  }
                ]
              }
            },
            "condition": {
              "always" : {}
            },
            "actions": {
              "output": {
                "logging" : {
                  "text" : "{{ctx.payload.objects.0.field}} {{ctx.payload.objects.1.field}}"
                }
              }
            }
          }
  - match: { _id: "test_watch" }
  - match: { created: true }

  - do: {watcher.stats:{}}
  - match: { "watch_count": 1 }

  # Simulate a Thread.sleep()
  - do:
      catch: request_timeout
      cluster.health:
        wait_for_nodes: 99
        timeout: 10s
  - match: { "timed_out": true }

  - do:
      search:
        index: .watcher-history-*
  - match: { hits.hits.0._source.result.actions.0.logging.logged_text: "value1 value2" }
