import org.elasticsearch.gradle.precommit.PrecommitTasks

apply plugin: 'elasticsearch.esplugin'

esplugin {
    name 'ml'
    description 'Machine Learning Plugin'
    classname 'org.elasticsearch.xpack.ml.MlPlugin'
}

configurations {
    nativeBundle
}

dependencies {
    compile group: 'net.sf.supercsv', name: 'super-csv', version:"${supercsvVersion}"
    nativeBundle group: "${project.group}", name: 'ml-cpp', version:"${project.version}", classifier: 'darwin-x86_64', ext: 'zip'
    nativeBundle group: "${project.group}", name: 'ml-cpp', version:"${project.version}", classifier: 'linux-x86_64', ext: 'zip'
    nativeBundle group: "${project.group}", name: 'ml-cpp', version:"${project.version}", classifier: 'windows-x86_64', ext: 'zip'
    testCompile group: 'org.ini4j', name: 'ini4j', version:"${ini4jVersion}"
}

integTest {
    cluster {
        //setting 'useNativeProcess', 'true'
        distribution = 'zip'
    }
}

bundlePlugin {
  if (project.cppLocalDists) {
    def localCppBundles = fileTree(dir: cppLocalDists).matching { include "ml-cpp-${project.version}-*.zip" }
    for (outputFile in localCppBundles) {
      from(zipTree(outputFile)) {
        duplicatesStrategy 'exclude'
      }
    }
  } else {
    for (outputFile in configurations.nativeBundle) {
      from(zipTree(outputFile)) {
        duplicatesStrategy 'exclude'
      }
    }
  }
}
