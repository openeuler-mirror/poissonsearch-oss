setup:
  - do:
      xpack.ml.put_job:
        job_id: farequote
        body:  >
          {
            "analysis_config" : {
                "detectors" :[{"function":"metric","field_name":"responsetime","by_field_name":"airline"}]
            },
            "data_description" : {
                "format":"xcontent",
                "time_field":"time"
            }
          }

  - do:
      index:
        index:  .ml-anomalies-farequote
        type:   result
        id:     farequote_1464739200000_1_1
        body:
          {
            "job_id": "farequote",
            "result_type": "record",
            "timestamp": "2016-06-01T00:00:00Z",
            "record_score": 60.0,
            "bucket_span": 1,
            "sequence_num": 1
          }

  - do:
        index:
          index:  .ml-anomalies-farequote
          type:   result
          id:     farequote_1464825600000_1_2
          body:
            {
              "job_id": "farequote",
              "result_type": "record",
              "timestamp": "2016-06-02T00:00:00Z",
              "record_score": 80.0,
              "bucket_span": 1,
              "sequence_num": 2,
              "is_interim": true
            }

  - do:
      indices.refresh:
        index: .ml-anomalies-farequote

---
"Test result records api":
  - do:
      xpack.ml.get_records:
        job_id: "farequote"

  - match: { count: 2 }
  - match: { records.0.timestamp: 1464825600000 }
  - match: { records.0.job_id: farequote}
  - match: { records.0.result_type: record}
  - match: { records.1.timestamp: 1464739200000 }
  - match: { records.1.job_id: farequote}
  - match: { records.1.result_type: record}

---
"Test get records given exclude_interim is false":
  - do:
      xpack.ml.get_records:
        job_id: "farequote"
        exclude_interim: false

  - match: { count: 2 }

---
"Test get records given exclude_interim is true":
  - do:
      xpack.ml.get_records:
        job_id: "farequote"
        exclude_interim: true

  - match: { count: 1 }
  - match: { records.0.timestamp: 1464739200000 }
  - match: { records.0.is_interim: false }

---
"Test result records api with time range":
  - do:
      xpack.ml.get_records:
        job_id: "farequote"
        start: "2016-05-01T00:00:00Z"
        end: "2016-06-01T01:00:00Z"

  - match: { count: 1 }
  - match: { records.0.timestamp: 1464739200000 }
  - match: { records.0.job_id: farequote}
  - match: { records.0.result_type: record}

---
"Test with unknown job id":
  - do:
      catch: missing
      xpack.ml.get_records:
        job_id: "non-existent-job"
