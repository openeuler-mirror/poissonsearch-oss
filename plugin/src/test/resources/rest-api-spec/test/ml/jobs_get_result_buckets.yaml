setup:
  - do:
      xpack.ml.put_job:
        job_id: farequote
        body:  >
          {
            "analysis_config" : {
                "detectors" :[{"function":"metric","field_name":"responsetime","by_field_name":"airline"}]
            },
            "data_description" : {
                "format":"xcontent",
                "time_field":"time"
            }
          }

  - do:
      index:
        index:  .ml-anomalies-farequote
        type:   result
        id:     "farequote_1464739200000_1"
        body:
          {
            "job_id": "farequote",
            "result_type": "bucket",
            "timestamp": "2016-06-01T00:00:00Z",
            "bucket_span":1
          }

  - do:
      index:
        index:  .ml-anomalies-farequote
        type:   result
        id:     "farequote_1464739200000_2"
        body:
          {
            "job_id": "farequote",
            "result_type": "bucket",
            "timestamp": "2016-08-01T00:00:00Z",
            "bucket_span":1,
            "is_interim": true
          }

  - do:
      indices.refresh:
        index: .ml-anomalies-farequote

---
"Test result buckets api with time range":
  - do:
      xpack.ml.get_buckets:
        job_id: "farequote"
        start: "2016-05-01T00:00:00Z"
        end: "2016-07-01T00:00:00Z"

  - match: { count: 1 }
  - match: { buckets.0.timestamp: 1464739200000 }
  - match: { buckets.0.job_id: farequote}
  - match: { buckets.0.result_type: bucket}

---
"Test result buckets api":
  - do:
      xpack.ml.get_buckets:
        job_id: "farequote"

  - match: { count: 2 }
  - match: { buckets.0.timestamp: 1464739200000 }
  - match: { buckets.0.job_id: farequote}
  - match: { buckets.0.result_type: bucket}
  - match: { buckets.1.timestamp: 1470009600000 }
  - match: { buckets.1.job_id: farequote}
  - match: { buckets.1.result_type: bucket}
  - is_false: buckets.0.partition_scores
  - is_false: buckets.1.partition_scores

---
"Test get buckets given exclude_interim is false":
  - do:
      xpack.ml.get_buckets:
        job_id: "farequote"
        exclude_interim: false

  - match: { count: 2 }

---
"Test get buckets given exclude_interim is true":
  - do:
      xpack.ml.get_buckets:
        job_id: "farequote"
        exclude_interim: true

  - match: { count: 1 }
  - match: { buckets.0.timestamp: 1464739200000 }
  - match: { buckets.0.is_interim: false }

---
"Test result single bucket api":
  - do:
      xpack.ml.get_buckets:
        job_id: "farequote"
        timestamp: "2016-06-01T00:00:00Z"

  - match: { buckets.0.timestamp: 1464739200000}
  - match: { buckets.0.job_id: farequote }
  - match: { buckets.0.result_type: bucket}

---
"Test mutually-exclusive params":
  - do:
      catch: request
      xpack.ml.get_buckets:
        job_id: "farequote"
        timestamp: "2016-06-01T00:00:00Z"
        start: "2016-05-01T00:00:00Z"

  - do:
      catch: request
      xpack.ml.get_buckets:
        job_id: "farequote"
        timestamp: "2016-06-01T00:00:00Z"
        end: "2016-05-01T00:00:00Z"

  - do:
      catch: request
      xpack.ml.get_buckets:
        job_id: "farequote"
        timestamp: "2016-06-01T00:00:00Z"
        from: "2016-05-01T00:00:00Z"

  - do:
      catch: request
      xpack.ml.get_buckets:
        job_id: "farequote"
        timestamp: "2016-06-01T00:00:00Z"
        end: "2016-05-01T00:00:00Z"

  - do:
      catch: request
      xpack.ml.get_buckets:
        job_id: "farequote"
        timestamp: "2016-06-01T00:00:00Z"
        anomaly_score: "80.0"

---
"Test mutually-exclusive params via body":
  - do:
      catch: request
      xpack.ml.get_buckets:
        job_id: "farequote"
        body:
          timestamp: "2016-06-01T00:00:00Z"
          start: "2016-05-01T00:00:00Z"

  - do:
      catch: request
      xpack.ml.get_buckets:
        job_id: "farequote"
        body:
          timestamp: "2016-06-01T00:00:00Z"
          end: "2016-05-01T00:00:00Z"

  - do:
      catch: request
      xpack.ml.get_buckets:
        job_id: "farequote"
        body:
          timestamp: "2016-06-01T00:00:00Z"
          from: "2016-05-01T00:00:00Z"

  - do:
      catch: request
      xpack.ml.get_buckets:
        job_id: "farequote"
        body:
          timestamp: "2016-06-01T00:00:00Z"
          end: "2016-05-01T00:00:00Z"

  - do:
      catch: request
      xpack.ml.get_buckets:
        job_id: "farequote"
        body:
          timestamp: "2016-06-01T00:00:00Z"
          anomaly_score: "80.0"

---
"Test with unknown job id":
  - do:
      catch: missing
      xpack.ml.get_buckets:
        job_id: "non-existent-job"
