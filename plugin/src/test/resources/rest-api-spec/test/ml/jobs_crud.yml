---
"Test get all jobs and stats given no job exists":

  - do:
      xpack.ml.get_jobs:
        job_id: "_all"
  - match: { count: 0 }
  - match: { jobs: [] }

  - do:
      xpack.ml.get_job_stats:
        job_id: "_all"
  - match: { count: 0 }
  - match: { jobs: [] }

---
"Test job crud apis":

  - do:
      xpack.ml.put_job:
        job_id: job-crud-test-apis
        body:  >
          {
            "description":"Analysis of response time by airline",
            "analysis_config" : {
                "bucket_span": "1h",
                "detectors" :[{"function":"metric","field_name":"responsetime","by_field_name":"airline"}]
            },
            "data_description" : {
                "field_delimiter":",",
                "time_field":"time",
                "time_format":"yyyy-MM-dd HH:mm:ssX"
            }
          }
  - match: { job_id: "job-crud-test-apis" }

  - do:
      xpack.ml.get_jobs:
        job_id: "job-crud-test-apis"
  - match: { count: 1 }
  - match: { jobs.0.job_id: "job-crud-test-apis" }

  - do:
      indices.get_alias:
        name: ".ml-anomalies-job-crud-test-apis"
  - match: { \.ml-anomalies-shared.aliases.\.ml-anomalies-job-crud-test-apis.filter.term.job_id.value: job-crud-test-apis }

  - do:
      indices.get_alias:
        name: ".ml-anomalies-.write-job-crud-test-apis"
  - match: { \.ml-anomalies-shared.aliases.\.ml-anomalies-\.write-job-crud-test-apis: {} }

  - do:
      xpack.ml.delete_job:
        job_id: "job-crud-test-apis"
  - match: { acknowledged: true }

  - do:
      indices.exists:
        index: ".ml-anomalies-job-crud-test-apis"
  - is_false: ''

  - do:
      indices.exists_alias:
        name: ".ml-anomalies-job-crud-test-apis"
  - is_false: ''

  - do:
      indices.exists_alias:
        name: ".ml-anomalies-.write-job-crud-test-apis"
  - is_false: ''

---
"Test get job API with non existing job id":
  - do:
      catch: missing
      xpack.ml.get_jobs:
        job_id: "non-existing"

---
"Test put job with inconsistent body/param ids":
  - do:
      catch: /illegal_argument_exception/
      xpack.ml.put_job:
        job_id: an_id
        body:  >
          {
            "job_id":"a_different_id",
            "description":"Analysis of response time by airline",
            "analysis_config" : {
                "bucket_span": "1h",
                "detectors" :[{"function":"metric","field_name":"responsetime","by_field_name":"airline"}]
            },
            "data_description" : {
                "field_delimiter":",",
                "time_field":"time",
                "time_format":"yyyy-MM-dd HH:mm:ssX"
            }
          }

  - do:
      catch: /Inconsistent job_id; 'a_different_id' specified in the body differs from 'an_id' specified as a URL argument/
      xpack.ml.put_job:
        job_id: an_id
        body:  >
          {
            "job_id":"a_different_id",
            "description":"Analysis of response time by airline",
            "analysis_config" : {
                "bucket_span": "3600s",
                "detectors" :[{"function":"metric","field_name":"responsetime","by_field_name":"airline"}]
            },
            "data_description" : {
                "field_delimiter":",",
                "time_field":"time",
                "time_format":"yyyy-MM-dd HH:mm:ssX"
            }
          }

---
"Test put job with id that is already taken":
  - do:
      xpack.ml.put_job:
        job_id: jobs-crud-id-already-taken
        body:  >
          {
            "job_id":"jobs-crud-id-already-taken",
            "description":"Analysis of response time by airline",
            "analysis_config" : {
                "bucket_span": "3600000ms",
                "detectors" :[{"function":"metric","field_name":"responsetime","by_field_name":"airline"}]
            },
            "data_description" : {
                "field_delimiter":",",
                "time_field":"time",
                "time_format":"yyyy-MM-dd HH:mm:ssX"
            }
          }
  - match: { job_id: "jobs-crud-id-already-taken" }

  - do:
      catch: /resource_already_exists_exception/
      xpack.ml.put_job:
        job_id: jobs-crud-id-already-taken
        body:  >
          {
            "job_id":"jobs-crud-id-already-taken",
            "description":"Analysis of response time by airline",
            "analysis_config" : {
                "bucket_span": "1h",
                "detectors" :[{"function":"metric","field_name":"responsetime","by_field_name":"airline"}]
            },
            "data_description" : {
                "field_delimiter":",",
                "time_field":"time",
                "time_format":"yyyy-MM-dd HH:mm:ssX"
            }
          }
  - do:
      catch: /The job cannot be created with the Id 'jobs-crud-id-already-taken'. The Id is already used./
      xpack.ml.put_job:
        job_id: jobs-crud-id-already-taken
        body:  >
          {
            "job_id":"jobs-crud-id-already-taken",
            "description":"Analysis of response time by airline",
            "analysis_config" : {
                "bucket_span": "1h",
                "detectors" :[{"function":"metric","field_name":"responsetime","by_field_name":"airline"}]
            },
            "data_description" : {
                "field_delimiter":",",
                "time_field":"time",
                "time_format":"yyyy-MM-dd HH:mm:ssX"
            }
          }
  - do:
      catch: param
      xpack.ml.put_job:
        job_id: jobs-crud-id-already-taken
        body:  >
          {
            "job_id":"jobs-crud-id-already-taken",
            "description":"Analysis of response time by airline",
            "analysis_config" : {
                "bucket_span": "1h",
                "detectors" :[{"function":"metric","field_name":"responsetime","by_field_name":"airline"}]
            },
            "data_description" : {
                "field_delimiter":",",
                "time_field":"time",
                "time_format":"yyyy-MM-dd HH:mm:ssX"
            }
          }

---
"Test update job":
  - do:
      xpack.ml.put_job:
        job_id: jobs-crud-update-job
        body:  >
          {
            "description":"Pre update description",
            "analysis_config" : {
                "detectors" :[{"function":"mean","field_name":"responsetime","by_field_name":"airline"},
                    {"function":"count","by_field_name":"mlcategory"}],
                "categorization_field_name": "some_category",
                "categorization_filters" : ["cat1.*", "cat2.*"]
            },
            "data_description" : {
              "field_delimiter":","
            },
            "model_plot_config": {
              "enabled": true,
              "terms": "foo,bar"
            },
            "analysis_limits": {
              "model_memory_limit": 10
            },
            "renormalization_window_days": 1,
            "background_persist_interval": "2h",
            "model_snapshot_retention_days": 3,
            "results_retention_days": 4,
            "custom_settings": {
              "setting1": "custom1",
              "setting2": "custom2"
            }
          }
  - match: { job_id: "jobs-crud-update-job" }

  - do:
      xpack.ml.open_job:
        job_id: jobs-crud-update-job

  - do:
      xpack.ml.update_job:
        job_id: jobs-crud-update-job
        body:  >
          {
            "description":"Post update description",
            "detectors": [{"detector_index": 0, "rules": {"target_field_name": "airline",
                                      "rule_conditions": [ { "condition_type": "numerical_actual",
                                                             "condition": {"operator": "gt", "value": "10" } } ] } },
                          {"detector_index": 1, "description": "updated description"}],
            "model_plot_config": {
              "enabled": false,
              "terms": "foobar"
            },
            "analysis_limits": {
              "model_memory_limit": 20
            },
            "renormalization_window_days": 10,
            "background_persist_interval": "3h",
            "model_snapshot_retention_days": 30,
            "results_retention_days": 40,
            "categorization_filters" : ["cat3.*"],
            "custom_settings": {
              "setting3": "custom3"
            }
          }
  - match: { job_id: "jobs-crud-update-job" }
  - match: { description: "Post update description" }
  - match: { model_plot_config.enabled: false }
  - match: { model_plot_config.terms: "foobar" }
  - match: { analysis_limits.model_memory_limit: 20 }
  - match: { analysis_config.categorization_filters: ["cat3.*"] }
  - match: { analysis_config.detectors.0.detector_rules.0.target_field_name: "airline" }
  - match: { analysis_config.detectors.0.detector_index: 0 }
  - match: { analysis_config.detectors.1.detector_description: "updated description" }
  - match: { analysis_config.detectors.1.detector_index: 1 }
  - match: { renormalization_window_days: 10 }
  - match: { background_persist_interval: "3h" }
  - match: { model_snapshot_retention_days: 30 }
  - match: { results_retention_days: 40 }

  - do:
      catch: request
      xpack.ml.update_job:
        job_id: _all
        body:  >
          {
            "description":"Can't update all description"
          }

---
"Test delete job that is referred by a datafeed":
  - do:
      xpack.ml.put_job:
        job_id: jobs-crud-datafeed-job
        body:  >
          {
            "job_id":"jobs-crud-datafeed-job",
            "description":"Analysis of response time by airline",
            "analysis_config" : {
                "bucket_span": "1h",
                "detectors" :[{"function":"metric","field_name":"responsetime","by_field_name":"airline"}]
            },
            "data_description" : {
                "format":"xcontent",
                "time_field":"time",
                "time_format":"yyyy-MM-dd HH:mm:ssX"
            }
          }
  - match: { job_id: "jobs-crud-datafeed-job" }

  - do:
      xpack.ml.put_datafeed:
        datafeed_id: jobs-crud-test-datafeed-1
        body:  >
          {
            "job_id":"jobs-crud-datafeed-job",
            "indexes":["index-foo"],
            "types":["type-bar"]
          }
  - match: { datafeed_id: "jobs-crud-test-datafeed-1" }

  - do:
      catch: /Cannot delete job \[jobs-crud-datafeed-job\] because datafeed \[jobs-crud-test-datafeed-1\] refers to it/
      xpack.ml.delete_job:
        job_id: jobs-crud-datafeed-job

---
"Test delete job that is opened":
  - do:
      xpack.ml.put_job:
        job_id: delete-opened-job
        body:  >
          {
            "analysis_config" : {
                "bucket_span": "1h",
                "detectors" :[{"function":"count"}]
            },
            "data_description" : {
                "time_field":"time"
            }
          }
  - match: { job_id: "delete-opened-job" }

  - do:
      xpack.ml.open_job:
        job_id: delete-opened-job
  - match: { opened: true }

  - do:
      catch: /Cannot delete job \[delete-opened-job\] because the job is opened/
      xpack.ml.delete_job:
        job_id: delete-opened-job

---
"Test close job":

  - do:
      xpack.ml.put_job:
        job_id: jobs-crud-close-job
        body:  >
          {
            "job_id":"jobs-crud-close-job",
            "description":"Analysis of response time by airline",
            "analysis_config" : {
                "bucket_span":"1h",
                "detectors" :[{"function":"metric","field_name":"responsetime","by_field_name":"airline"}]
            },
            "data_description" : {
                "format":"xcontent",
                "time_field":"time",
                "time_format":"epoch"
            }
          }
  - match: { job_id: "jobs-crud-close-job" }

  - do:
      xpack.ml.open_job:
        job_id: jobs-crud-close-job

  - do:
      xpack.ml.post_data:
        job_id: jobs-crud-close-job
        body: >
          {"airline":"AAL","responsetime":"132.2046","time":"1403481600"}
          {"airline":"JZA","responsetime":"990.4628","time":"1403481700"}


  - do:
      xpack.ml.flush_job:
        job_id: jobs-crud-close-job
  - match: { flushed: true }

  - do:
      cluster.state:
        metric: [ metadata ]
        filter_path: metadata.persistent_tasks
  - match: {"metadata.persistent_tasks.tasks.0.task.xpack/ml/job.status.state": opened}

  - do:
      xpack.ml.close_job:
        job_id: jobs-crud-close-job
  - match: { closed: true }

  - do:
      cluster.state:
        metric: [ metadata ]
        filter_path: metadata.persistent_tasks
  - match:
      metadata.persistent_tasks.tasks: []

---
"Test closing a closed job isn't an error":
  - do:
      xpack.ml.put_job:
        job_id: jobs-crud-close-a-closed-job
        body:  >
          {
            "description":"Analysis of response time by airline",
            "analysis_config" : {
                "detectors" :[{"function":"count"}]
            },
            "data_description" : {
                "format":"xcontent"
            }
          }
  - match: { job_id: "jobs-crud-close-a-closed-job" }

  - do:
      xpack.ml.open_job:
        job_id: jobs-crud-close-a-closed-job

  - do:
      xpack.ml.close_job:
        job_id: jobs-crud-close-a-closed-job
  - match: { closed: true }

  - do:
      xpack.ml.close_job:
        job_id: jobs-crud-close-a-closed-job
  - match: { closed: true }

---
"Test close all jobs":
  - do:
      xpack.ml.put_job:
        job_id: jobs-crud-close-all-1
        body:  >
          {
            "description":"Analysis of response time by airline",
            "analysis_config" : {
                "detectors" :[{"function":"count"}]
            },
            "data_description" : {
                "format":"xcontent"
            }
          }
  - match: { job_id: "jobs-crud-close-all-1" }

  - do:
      xpack.ml.put_job:
        job_id: jobs-crud-close-all-2
        body:  >
          {
            "description":"Analysis of response time by airline",
            "analysis_config" : {
                "detectors" :[{"function":"count"}]
            },
            "data_description" : {
                "format":"xcontent"
            }
          }
  - match: { job_id: "jobs-crud-close-all-2" }

  - do:
      xpack.ml.open_job:
        job_id: jobs-crud-close-all-2

  - do:
      xpack.ml.close_job:
        job_id: _all
  - match: { closed: true }

  - do:
      xpack.ml.get_job_stats:
        job_id: _all
  - match: { jobs.0.state: closed }
  - match: { jobs.1.state: closed }

---
"Test force close job":

  - do:
      xpack.ml.put_job:
        job_id: jobs-crud-force-close-job
        body:  >
          {
            "job_id":"jobs-crud-force-close-job",
            "description":"Analysis of response time by airline",
            "analysis_config" : {
                "bucket_span":"1h",
                "detectors" :[{"function":"metric","field_name":"responsetime","by_field_name":"airline"}]
            },
            "data_description" : {
                "format":"xcontent",
                "time_field":"time",
                "time_format":"epoch"
            }
          }
  - match: { job_id: "jobs-crud-force-close-job" }

  - do:
      xpack.ml.open_job:
        job_id: jobs-crud-force-close-job

  - do:
      xpack.ml.post_data:
        job_id: jobs-crud-force-close-job
        body: >
          {"airline":"AAL","responsetime":"132.2046","time":"1403481600"}
          {"airline":"JZA","responsetime":"990.4628","time":"1403481700"}


  - do:
      xpack.ml.flush_job:
        job_id: jobs-crud-force-close-job
  - match: { flushed: true }

  - do:
      cluster.state:
        metric: [ metadata ]
        filter_path: metadata.persistent_tasks
  - match: {"metadata.persistent_tasks.tasks.0.task.xpack/ml/job.status.state": opened}

  - do:
      xpack.ml.close_job:
        job_id: jobs-crud-force-close-job
        force: true
  - match: { closed: true }

  - do:
      cluster.state:
        metric: [ metadata ]
        filter_path: metadata.persistent_tasks
  - match:
      metadata.persistent_tasks.tasks: []

---
"Test force closing a closed job isn't an error":
  - do:
      xpack.ml.put_job:
        job_id: jobs-crud-close-a-closed-job
        body:  >
          {
            "description":"Analysis of response time by airline",
            "analysis_config" : {
                "detectors" :[{"function":"count"}]
            },
            "data_description" : {
                "format":"xcontent"
            }
          }
  - match: { job_id: "jobs-crud-close-a-closed-job" }

  - do:
      xpack.ml.open_job:
        job_id: jobs-crud-close-a-closed-job

  - do:
      xpack.ml.close_job:
        job_id: jobs-crud-close-a-closed-job
        force: true
  - match: { closed: true }

  - do:
      xpack.ml.close_job:
        job_id: jobs-crud-close-a-closed-job
        force: true
  - match: { closed: true }

---
"Test open and close an unknown job is resource not found":
  - do:
      catch: missing
      xpack.ml.open_job:
        job_id: jobs-crud-some-missing-job-i-made-up

  - do:
      catch: missing
      xpack.ml.close_job:
        job_id: jobs-crud-some-missing-job-i-made-up

---
"Test cannot create job with existing categorizer state document":

  - do:
      index:
        index: .ml-state
        type: doc
        id: jobs-crud-existing-docs_categorizer_state#1
        body:
          key: value

  - do:
      indices.refresh: {}

  - do:
      catch: /status_exception/
      xpack.ml.put_job:
        job_id: jobs-crud-existing-docs
        body:  >
          {
            "analysis_config" : {
                "bucket_span": "1h",
                "detectors" :[{"function":"metric","field_name":"responsetime","by_field_name":"airline"}]
            },
            "data_description" : {
            }
          }

---
"Test cannot create job with existing quantiles document":

  - do:
      index:
        index: .ml-state
        type: doc
        id: jobs-crud-existing-docs_quantiles
        body:
          key: value

  - do:
      indices.refresh: {}

  - do:
      catch: /status_exception/
      xpack.ml.put_job:
        job_id: jobs-crud-existing-docs
        body:  >
          {
            "analysis_config" : {
                "bucket_span": "1h",
                "detectors" :[{"function":"metric","field_name":"responsetime","by_field_name":"airline"}]
            },
            "data_description" : {
            }
          }


---
"Test cannot create job with existing result document":

  - do:
      index:
        index:  .ml-anomalies-shared
        type:   doc
        id:     "jobs-crud-existing-result-docs_1464739200000_1"
        body:
          {
            "job_id": "jobs-crud-existing-result-docs",
            "result_type": "bucket",
            "timestamp": "2016-06-01T00:00:00Z",
            "anomaly_score": 90.0,
            "bucket_span":1
          }

  - do:
      indices.refresh: {}

  - do:
      catch: /status_exception/
      xpack.ml.put_job:
        job_id: jobs-crud-existing-result-docs
        body:  >
          {
            "analysis_config" : {
                "bucket_span": "1h",
                "detectors" :[{"function":"metric","field_name":"responsetime","by_field_name":"airline"}]
            },
            "data_description" : {
            }
          }

---
"Test cannot create job with model snapshot id set":

  - do:
      catch: /illegal_argument_exception/
      xpack.ml.put_job:
        job_id: has-model-snapshot-id
        body:  >
          {
            "model_snapshot_id": "wont-create-with-this-setting",
            "analysis_config" : {
                "bucket_span": "1h",
                "detectors" :[{"function":"metric","field_name":"responsetime","by_field_name":"airline"}]
            },
            "data_description" : {
            }
          }
