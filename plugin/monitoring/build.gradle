import com.carrotsearch.gradle.junit4.RandomizedTestingTask
import org.elasticsearch.gradle.BuildPlugin

evaluationDependsOn(':x-pack-elasticsearch:plugin:core')

apply plugin: 'elasticsearch.esplugin'
esplugin {
    name 'x-pack-monitoring'
    description 'Elasticsearch Expanded Pack Plugin - Monitoring'
    classname 'org.elasticsearch.xpack.monitoring.Monitoring'
    hasNativeController false
    requiresKeystore false
    extendedPlugins = ['x-pack-core']
    licenseFile project(':x-pack-elasticsearch').file('LICENSE.txt')
    noticeFile project(':x-pack-elasticsearch').file('NOTICE.txt')
}
archivesBaseName = 'x-pack-monitoring'

licenseHeaders.enabled = false

dependencies {
    provided "org.elasticsearch:elasticsearch:${version}"

    provided "org.elasticsearch.plugin:x-pack-core:${version}"
    testCompile project(path: ':x-pack-elasticsearch:plugin:core', configuration: 'testArtifacts')

    // monitoring deps
    compile "org.elasticsearch.client:elasticsearch-rest-client:${version}"
    compile "org.elasticsearch.client:elasticsearch-rest-client-sniffer:${version}"

    // baz - this goes away after we separate out the actions #27759
    testCompile "org.elasticsearch.plugin:x-pack-watcher:${version}"
}

compileJava.options.compilerArgs << "-Xlint:-deprecation,-rawtypes,-serial,-try,-unchecked"
compileTestJava.options.compilerArgs << "-Xlint:-deprecation,-rawtypes,-serial,-try,-unchecked"

// TODO: don't publish test artifacts just to run messy tests, fix the tests!
// https://github.com/elastic/x-plugins/issues/724
configurations {
    testArtifacts.extendsFrom testRuntime
}
task testJar(type: Jar) {
    appendix 'test'
    from sourceSets.test.output
}
artifacts {
    // normal es plugins do not publish the jar but we need to since users need it for Transport Clients and extensions
    archives jar
    testArtifacts testJar
}

dependencyLicenses {
    mapping from: /elasticsearch-rest-client.*/, to: 'elasticsearch'
    mapping from: /http.*/, to: 'httpclient' // pulled in by rest client
    mapping from: /commons-.*/, to: 'commons' // pulled in by rest client
    ignoreSha 'x-pack-core'
    ignoreSha 'elasticsearch-rest-client'
    ignoreSha 'transport-netty4'
    ignoreSha 'elasticsearch-rest-client-sniffer'
}

run {
    plugin ':x-pack-elasticsearch:plugin:core'
}

// xpack modules are installed in real clusters as the meta plugin, so
// installing them as individual plugins for integ tests doesn't make sense,
// so we disable integ tests
integTest.enabled = false

// Instead we create a separate task to run the
// tests based on ESIntegTestCase
task internalClusterTest(type: RandomizedTestingTask,
                         group: JavaBasePlugin.VERIFICATION_GROUP,
                         description: 'Multi-node tests',
                         dependsOn: test.dependsOn) {
  configure(BuildPlugin.commonTestConfig(project))
  classpath = project.test.classpath
  testClassesDir = project.test.testClassesDir
  include '**/*IT.class'
  systemProperty 'es.set.netty.runtime.available.processors', 'false'
}
check.dependsOn internalClusterTest 
internalClusterTest.mustRunAfter test

// also add an "alias" task to make typing on the command line easier task icTest {
task icTest {
  dependsOn internalClusterTest
}
